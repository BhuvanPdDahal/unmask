generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    username  String   @unique
    email     String   @unique
    password  String
    image     String?
    joinedAt  DateTime @default(now())
    updatedAt DateTime @updatedAt

    posts     Post[]
    pollVotes PollVote[]
}

model VerificationToken {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    email     String   @unique
    token     String
    expiresAt DateTime
}

model Post {
    id          String   @id @default(auto()) @map("_id") @db.ObjectId
    creatorId   String   @db.ObjectId
    title       String
    description String
    image       String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    poll        Poll?

    creator User @relation(fields: [creatorId], references: [id], onDelete: Cascade)
}

model Poll {
    id      String     @id @default(auto()) @map("_id") @db.ObjectId
    postId  String     @unique @db.ObjectId
    options String[]
    votes   PollVote[]

    post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model PollVote {
    id       String @id @default(auto()) @map("_id") @db.ObjectId
    pollId   String @db.ObjectId
    casterId String @db.ObjectId
    vote     Int

    poll   Poll @relation(fields: [pollId], references: [id], onDelete: Cascade)
    caster User @relation(fields: [casterId], references: [id], onDelete: Cascade)
}
